{"ast":null,"code":"import axios from 'axios';\nimport { history } from '../index';\n//cấu hình hệ thống\nexport const DOMAIN = 'https://shop.cyberlearn.vn';\nexport const USER_LOGIN = 'userLogin';\nexport const TOKEN = 'accessToken';\nconst tokenCybersoft = `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5Mb3AiOiJCb290Y2FtcCA0MyIsIkhldEhhblN0cmluZyI6IjA0LzExLzIwMjMiLCJIZXRIYW5UaW1lIjoiMTY5OTA1NjAwMDAwMCIsIm5iZiI6MTY2OTQ4MjAwMCwiZXhwIjoxNjk5MjAzNjAwfQ.7A1g8RqPPK_ttr9NYitsWT7Cbe11nz4qye-QxZ_b8fk`;\n\n//interceptor \nhttpMovie.interceptors.request.use(config => {\n  config = {\n    ...config\n  };\n  config.headers['TokenCybersoft'] = tokenCybersoft;\n  return config;\n}, err => {\n  return Promise.reject(err);\n});\n//Cấu hình api gửi đi \n//Tạo ra 1 đối tượng axios \nexport const http = axios.create({\n  baseURL: DOMAIN,\n  //domain của tất cả request\n  timeout: 30000 //thời gian request tồn tại\n});\n\nexport const {\n  saveStorageJSON,\n  getStorageJSON,\n  clearStorage\n} = {\n  saveStorageJSON: (name, data) => {\n    const string = JSON.stringify(data);\n    localStorage.setItem(name, string);\n  },\n  getStorageJSON: name => {\n    if (localStorage.getItem(name)) {\n      const data = JSON.parse(localStorage.getItem(name));\n      return data;\n    }\n    return undefined;\n  },\n  clearStorage: name => {\n    localStorage.removeItem(name);\n  }\n};\n\n//Cấu hình dùng chung cho tất cả request (yêu cầu gửi lên api)\nhttp.interceptors.request.use(config => {\n  var _getStorageJSON;\n  //headers: (dev định nghĩa)\n  //data (body): (lấy từ các input hoặc tham số từ phía client)\n  config.headers = {\n    ...config.headers\n  };\n  let token = (_getStorageJSON = getStorageJSON(USER_LOGIN)) === null || _getStorageJSON === void 0 ? void 0 : _getStorageJSON.accessToken;\n  config.headers.Authorization = `Bearer ${token}`;\n  config.headers.tokenCybersoft = `CybersoftDemo`;\n  return config;\n}, err => {\n  return Promise.reject(err);\n});\n\n//Cấu hình cho response (kết quả trả về từ api)\nhttp.interceptors.response.use(res => {\n  return res;\n}, err => {\n  var _err$response;\n  //Xử lý lỗi cho api bị lỗi theo status code \n  console.log(err);\n  if (((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === 401) {\n    alert('Đăng nhập để vào trang này !');\n    history.push('/login');\n  }\n  return Promise.reject(err);\n});\n\n/* statusCode thông dụng : \r\n    200: Dữ liệu gửi đi và nhận về kết quả thành công (OK)\r\n    201: Dữ liệu khởi tạo thành công (Created)\r\n    400: Bad request (lỗi không tìm thấy item trên backend)\r\n    404: Not found (không tìm thấy link backend)\r\n    500: Error in server (Lỗi xảy ra tại server - có thể do dữ liệu frontend gửi lên xử lý bị lỗi backend không catch trường hợp này thì ra 500 hoặc là backend code bị lỗi) => Xác định lỗi => mở post man request thử với data đúng thì có được hay không nếu vẫn lỗi thì báo backend fix\r\n    401: UnAuthorize (Lỗi khi không có quyền truy cập vào api này (phải token hợp lệ ...))\r\n    403: Forbiden ( Lỗi chưa đủ quyền truy cập vào api )\r\n\r\n*/","map":{"version":3,"names":["axios","history","DOMAIN","USER_LOGIN","TOKEN","tokenCybersoft","httpMovie","interceptors","request","use","config","headers","err","Promise","reject","http","create","baseURL","timeout","saveStorageJSON","getStorageJSON","clearStorage","name","data","string","JSON","stringify","localStorage","setItem","getItem","parse","undefined","removeItem","_getStorageJSON","token","accessToken","Authorization","response","res","_err$response","console","log","status","alert","push"],"sources":["C:/Users/Admin/Desktop/react/reactfinalproject/src/Util/Config.jsx"],"sourcesContent":["import axios from 'axios'\r\nimport {history} from '../index';\r\n//cấu hình hệ thống\r\nexport const DOMAIN = 'https://shop.cyberlearn.vn';\r\nexport const USER_LOGIN = 'userLogin';\r\nexport const TOKEN ='accessToken';\r\n\r\nconst tokenCybersoft = `eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0ZW5Mb3AiOiJCb290Y2FtcCA0MyIsIkhldEhhblN0cmluZyI6IjA0LzExLzIwMjMiLCJIZXRIYW5UaW1lIjoiMTY5OTA1NjAwMDAwMCIsIm5iZiI6MTY2OTQ4MjAwMCwiZXhwIjoxNjk5MjAzNjAwfQ.7A1g8RqPPK_ttr9NYitsWT7Cbe11nz4qye-QxZ_b8fk`;\r\n\r\n\r\n\r\n\r\n\r\n//interceptor \r\nhttpMovie.interceptors.request.use((config) => {\r\n    config = {...config};\r\n    config.headers['TokenCybersoft'] = tokenCybersoft\r\n\r\n    return config;\r\n\r\n}, err => {\r\n    return Promise.reject(err);\r\n})\r\n//Cấu hình api gửi đi \r\n//Tạo ra 1 đối tượng axios \r\nexport const http = axios.create({\r\n    baseURL: DOMAIN, //domain của tất cả request\r\n    timeout: 30000 //thời gian request tồn tại\r\n});\r\nexport const {saveStorageJSON,getStorageJSON,clearStorage} = {\r\n    saveStorageJSON: (name,data) => {\r\n        const string = JSON.stringify(data);\r\n        localStorage.setItem(name,string);\r\n    },\r\n    getStorageJSON: (name) => {\r\n        if(localStorage.getItem(name)) {\r\n            const data = JSON.parse(localStorage.getItem(name));\r\n            return data;\r\n        }\r\n        return undefined;\r\n    },\r\n    clearStorage: (name) => {\r\n        localStorage.removeItem(name)\r\n    }\r\n}\r\n\r\n//Cấu hình dùng chung cho tất cả request (yêu cầu gửi lên api)\r\nhttp.interceptors.request.use((config) => {\r\n    \r\n    //headers: (dev định nghĩa)\r\n    //data (body): (lấy từ các input hoặc tham số từ phía client)\r\n    config.headers = {...config.headers}\r\n    let token = getStorageJSON(USER_LOGIN)?.accessToken;\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n    config.headers.tokenCybersoft = `CybersoftDemo`;\r\n\r\n\r\n    return config;\r\n}, (err) => {\r\n    return Promise.reject(err);\r\n})\r\n\r\n//Cấu hình cho response (kết quả trả về từ api)\r\nhttp.interceptors.response.use((res)=>{ \r\n    return res;\r\n},(err)=> {\r\n    //Xử lý lỗi cho api bị lỗi theo status code \r\n    console.log(err);\r\n    if(err.response?.status === 401) {\r\n        alert('Đăng nhập để vào trang này !');\r\n        history.push('/login');\r\n    }\r\n    return Promise.reject(err);\r\n});\r\n\r\n/* statusCode thông dụng : \r\n    200: Dữ liệu gửi đi và nhận về kết quả thành công (OK)\r\n    201: Dữ liệu khởi tạo thành công (Created)\r\n    400: Bad request (lỗi không tìm thấy item trên backend)\r\n    404: Not found (không tìm thấy link backend)\r\n    500: Error in server (Lỗi xảy ra tại server - có thể do dữ liệu frontend gửi lên xử lý bị lỗi backend không catch trường hợp này thì ra 500 hoặc là backend code bị lỗi) => Xác định lỗi => mở post man request thử với data đúng thì có được hay không nếu vẫn lỗi thì báo backend fix\r\n    401: UnAuthorize (Lỗi khi không có quyền truy cập vào api này (phải token hợp lệ ...))\r\n    403: Forbiden ( Lỗi chưa đủ quyền truy cập vào api )\r\n\r\n*/"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,OAAO,QAAO,UAAU;AAChC;AACA,OAAO,MAAMC,MAAM,GAAG,4BAA4B;AAClD,OAAO,MAAMC,UAAU,GAAG,WAAW;AACrC,OAAO,MAAMC,KAAK,GAAE,aAAa;AAEjC,MAAMC,cAAc,GAAI,6OAA4O;;AAMpQ;AACAC,SAAS,CAACC,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAC3CA,MAAM,GAAG;IAAC,GAAGA;EAAM,CAAC;EACpBA,MAAM,CAACC,OAAO,CAAC,gBAAgB,CAAC,GAAGN,cAAc;EAEjD,OAAOK,MAAM;AAEjB,CAAC,EAAEE,GAAG,IAAI;EACN,OAAOC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AAC9B,CAAC,CAAC;AACF;AACA;AACA,OAAO,MAAMG,IAAI,GAAGf,KAAK,CAACgB,MAAM,CAAC;EAC7BC,OAAO,EAAEf,MAAM;EAAE;EACjBgB,OAAO,EAAE,KAAK,CAAC;AACnB,CAAC,CAAC;;AACF,OAAO,MAAM;EAACC,eAAe;EAACC,cAAc;EAACC;AAAY,CAAC,GAAG;EACzDF,eAAe,EAAEA,CAACG,IAAI,EAACC,IAAI,KAAK;IAC5B,MAAMC,MAAM,GAAGC,IAAI,CAACC,SAAS,CAACH,IAAI,CAAC;IACnCI,YAAY,CAACC,OAAO,CAACN,IAAI,EAACE,MAAM,CAAC;EACrC,CAAC;EACDJ,cAAc,EAAGE,IAAI,IAAK;IACtB,IAAGK,YAAY,CAACE,OAAO,CAACP,IAAI,CAAC,EAAE;MAC3B,MAAMC,IAAI,GAAGE,IAAI,CAACK,KAAK,CAACH,YAAY,CAACE,OAAO,CAACP,IAAI,CAAC,CAAC;MACnD,OAAOC,IAAI;IACf;IACA,OAAOQ,SAAS;EACpB,CAAC;EACDV,YAAY,EAAGC,IAAI,IAAK;IACpBK,YAAY,CAACK,UAAU,CAACV,IAAI,CAAC;EACjC;AACJ,CAAC;;AAED;AACAP,IAAI,CAACR,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EAAA,IAAAuB,eAAA;EAEtC;EACA;EACAvB,MAAM,CAACC,OAAO,GAAG;IAAC,GAAGD,MAAM,CAACC;EAAO,CAAC;EACpC,IAAIuB,KAAK,IAAAD,eAAA,GAAGb,cAAc,CAACjB,UAAU,CAAC,cAAA8B,eAAA,uBAA1BA,eAAA,CAA4BE,WAAW;EACnDzB,MAAM,CAACC,OAAO,CAACyB,aAAa,GAAI,UAASF,KAAM,EAAC;EAChDxB,MAAM,CAACC,OAAO,CAACN,cAAc,GAAI,eAAc;EAG/C,OAAOK,MAAM;AACjB,CAAC,EAAGE,GAAG,IAAK;EACR,OAAOC,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACAG,IAAI,CAACR,YAAY,CAAC8B,QAAQ,CAAC5B,GAAG,CAAE6B,GAAG,IAAG;EAClC,OAAOA,GAAG;AACd,CAAC,EAAE1B,GAAG,IAAI;EAAA,IAAA2B,aAAA;EACN;EACAC,OAAO,CAACC,GAAG,CAAC7B,GAAG,CAAC;EAChB,IAAG,EAAA2B,aAAA,GAAA3B,GAAG,CAACyB,QAAQ,cAAAE,aAAA,uBAAZA,aAAA,CAAcG,MAAM,MAAK,GAAG,EAAE;IAC7BC,KAAK,CAAC,8BAA8B,CAAC;IACrC1C,OAAO,CAAC2C,IAAI,CAAC,QAAQ,CAAC;EAC1B;EACA,OAAO/B,OAAO,CAACC,MAAM,CAACF,GAAG,CAAC;AAC9B,CAAC,CAAC;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}